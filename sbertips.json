openapi: 3.0.1
info:
  title: Tips API
  version: v1
paths:
  /api/tips/v1/cms/activityTypes:
    get:
      tags:
        - ActivityTypes
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TreeDictionaryItemArrayAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/TreeDictionaryItemArrayAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/TreeDictionaryItemArrayAnswer'
  /api/tips/v1/cms/admin/settings:
    get:
      tags:
        - Admin
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
        - Admin
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              nullable: true
          text/json:
            schema:
              type: object
              additionalProperties: {}
              nullable: true
          application/*+json:
            schema:
              type: object
              additionalProperties: {}
              nullable: true
      responses:
        '200':
          description: Success
  /api/tips/v1/cms/admin/audit:
    get:
      tags:
        - Admin
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: managementUserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
        - name: 'managementUserId[]'
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
        - name: UserIds
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
        - name: startTime
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
        - name: endTime
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
        - name: StartTime
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
        - name: EndTime
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
        - name: from
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuditEventDataArrayAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditEventDataArrayAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/AuditEventDataArrayAnswer'
  /api/tips/v1/cms/admin/audit/xlsx:
    get:
      tags:
        - Admin
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: managementUserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
        - name: 'managementUserId[]'
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
        - name: UserIds
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
        - name: startTime
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
        - name: endTime
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
        - name: StartTime
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
        - name: EndTime
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
        - name: from
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/tips/v1/auth/sendSms:
    post:
      tags:
        - AuthenticationControllerForWeb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendSmsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SendSmsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendSmsRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SendSmsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/SendSmsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SendSmsResponse'
  /api/tips/v1/auth/validateSms:
    post:
      tags:
        - AuthenticationControllerForWeb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateSmsCodeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ValidateSmsCodeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ValidateSmsCodeRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SendSmsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/SendSmsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SendSmsResponse'
  /api/tips/v1/cms/auth/login:
    post:
      tags:
        - CmsAuthentication
      summary: Зайти с логином и паролем
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementLoginRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ManagementLoginRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ManagementLoginRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ManagementLoginResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementLoginResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ManagementLoginResponse'
  /api/tips/v1/cms/auth/logout:
    get:
      tags:
        - CmsAuthentication
      summary: Завершить сессию пользователя
      parameters:
        - name: token
          in: header
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  /api/tips/v1/cms/auth/sendSms:
    post:
      tags:
        - CmsAuthentication
      summary: Отправить СМС
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendSmsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SendSmsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendSmsRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SendSmsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/SendSmsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SendSmsResponse'
  /api/tips/v1/cms/auth/validateSms:
    post:
      tags:
        - CmsAuthentication
      summary: Проверить СМС
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletePasswordRecoveryRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CompletePasswordRecoveryRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CompletePasswordRecoveryRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ManagementLoginResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementLoginResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ManagementLoginResponse'
  /api/tips/v1/cms/auth/changePassword:
    post:
      tags:
        - CmsAuthentication
      summary: Поменять пароль
      parameters:
        - name: token
          in: header
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  /api/tips/v1/cms/auth/checkInviteToken:
    get:
      tags:
        - CmsAuthentication
      summary: Проверить статус токена-приглашения
      parameters:
        - name: inviteToken
          in: query
          description: ''
          schema:
            type: string
            description: ''
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserStatus'
            application/json:
              schema:
                $ref: '#/components/schemas/UserStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/UserStatus'
  /api/tips/v1/cms/managementUsers:
    put:
      tags:
        - CmsManagementUsers
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateManagementUserRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateManagementUserRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateManagementUserRequestModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ManagementUser'
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementUser'
            text/json:
              schema:
                $ref: '#/components/schemas/ManagementUser'
    get:
      tags:
        - CmsManagementUsers
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: query
          in: query
          schema:
            type: string
            nullable: true
        - name: from
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ManagementUserArrayAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementUserArrayAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/ManagementUserArrayAnswer'
  '/api/tips/v1/cms/managementUsers/{id}':
    post:
      tags:
        - CmsManagementUsers
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditManagementUserRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EditManagementUserRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditManagementUserRequestModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
    delete:
      tags:
        - CmsManagementUsers
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  '/api/tips/v1/cms/managementUsers/{id}/disable':
    post:
      tags:
        - CmsManagementUsers
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  '/api/tips/v1/cms/managementUsers/{id}/enable':
    post:
      tags:
        - CmsManagementUsers
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  '/api/tips/v1/cms/managementUsers/{id}/sendInvite':
    post:
      tags:
        - CmsManagementUsers
      summary: Отправить инвайт
      parameters:
        - name: token
          in: header
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
  /api/tips/v1/cms/operations:
    get:
      tags:
        - CmsOperations
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: orgId
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: 'orgId[]'
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: Organizations
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: payeeId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
        - name: startTime
          in: query
          schema:
            type: integer
            format: int64
        - name: endTime
          in: query
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: 'status[]'
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: from
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ManagementPaymentOperationInfoArrayAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPaymentOperationInfoArrayAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/ManagementPaymentOperationInfoArrayAnswer'
  /api/tips/v1/cms/operations/xlsx:
    get:
      tags:
        - CmsOperations
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: orgId
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: 'orgId[]'
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: Organizations
          in: query
          schema:
            type: array
            items:
              type: string
            nullable: true
        - name: payeeId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
        - name: startTime
          in: query
          schema:
            type: integer
            format: int64
        - name: endTime
          in: query
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: 'status[]'
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        - name: from
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/tips/v1/cms/operations/report:
    get:
      tags:
        - CmsOperations
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: orgId
          in: query
          schema:
            type: integer
            format: int64
        - name: startTime
          in: query
          schema:
            type: integer
            format: int64
        - name: endTime
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganizationOperationsReport'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationOperationsReport'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganizationOperationsReport'
  /api/tips/v1/cms/operations/report/xlsx:
    get:
      tags:
        - CmsOperations
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: orgId
          in: query
          schema:
            type: integer
            format: int64
        - name: startTime
          in: query
          schema:
            type: integer
            format: int64
        - name: endTime
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganizationOperationsReport'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationOperationsReport'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganizationOperationsReport'
  '/api/tips/v1/cms/operations/{id}':
    get:
      tags:
        - CmsOperations
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExtendedOperationInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedOperationInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/ExtendedOperationInfo'
  /api/tips/v1/cms/organizations:
    put:
      tags:
        - CmsOrganization
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationOperationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganizationOperationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganizationOperationRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ShortOrganizationInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/ShortOrganizationInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/ShortOrganizationInfo'
    get:
      tags:
        - CmsOrganization
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: query
          in: query
          schema:
            type: string
            nullable: true
        - name: from
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ShortOrganizationInfoForListArrayAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/ShortOrganizationInfoForListArrayAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/ShortOrganizationInfoForListArrayAnswer'
  '/api/tips/v1/cms/organizations/{id}':
    post:
      tags:
        - CmsOrganization
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationOperationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganizationOperationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganizationOperationRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  '/api/tips/v1/cms/organizations/{oid}':
    get:
      tags:
        - CmsOrganization
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: oid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FullOrganizationInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/FullOrganizationInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/FullOrganizationInfo'
  '/api/tips/v1/cms/organizations/{oid}/payee':
    put:
      tags:
        - CmsOrganization
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: oid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayeeLinkRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/PayeeLinkRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PayeeLinkRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  '/api/tips/v1/cms/organizations/{oid}/payee/{pid}':
    delete:
      tags:
        - CmsOrganization
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: oid
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: pid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  '/api/tips/v1/cms/organizations/{oid}/logo':
    post:
      tags:
        - CmsOrganization
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: oid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UpdatePhotoResult'
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePhotoResult'
            text/json:
              schema:
                $ref: '#/components/schemas/UpdatePhotoResult'
    delete:
      tags:
        - CmsOrganization
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: oid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  '/api/tips/v1/cms/organizations/{oid}/disable':
    post:
      tags:
        - CmsOrganization
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: oid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  '/api/tips/v1/cms/organizations/{oid}/enable':
    post:
      tags:
        - CmsOrganization
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: oid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  '/api/tips/v1/cms/organizations/{oid}/qrIntegration':
    post:
      tags:
        - CmsOrganization
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: oid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QrPrechequeIntegrationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/QrPrechequeIntegrationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QrPrechequeIntegrationRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  /api/tips/v1/cms/organizations/createDoc:
    get:
      tags:
        - CmsOrganization
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: id
          in: query
          schema:
            type: integer
            format: int64
        - name: docType
          in: query
          schema:
            type: string
            nullable: true
        - name: payeeId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
        - name: 'payeeId[]'
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
        - name: PayeeUserIds
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
      responses:
        '200':
          description: Success
  '/api/tips/v1/cms/organizations/{orgId}/orderCards':
    post:
      tags:
        - CmsOrganization
      summary: Заказ изготовления визиток по E-mail
      parameters:
        - name: token
          in: header
          description: Авторизационный токен
          schema:
            type: string
            description: Авторизационный токен
            nullable: true
        - name: orgId
          in: path
          description: Id организации
          required: true
          schema:
            type: integer
            description: Id организации
            format: int64
      requestBody:
        description: Запрос на изготовление визиток
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardsOrderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CardsOrderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CardsOrderRequest'
      responses:
        '200':
          description: Запрос на изготовление визиток успешно отправлен
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
        '500':
          description: Ошибка формирования запроса на изготовление визиток
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/api/tips/v1/cms/organizations/{orgId}/downloadCards':
    post:
      tags:
        - CmsOrganization
      summary: Выгружает карточки с QR-токенами
      parameters:
        - name: token
          in: header
          description: Токен доступа
          schema:
            type: string
            description: Токен доступа
            nullable: true
        - name: orgId
          in: path
          description: Id организации
          required: true
          schema:
            type: integer
            description: Id организации
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadCardsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DownloadCardsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DownloadCardsRequest'
      responses:
        '200':
          description: ZIP-архив с карточками в формате PDF
          content:
            text/plain:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: string
                format: binary
            text/json:
              schema:
                type: string
                format: binary
        '500':
          description: Ошибка формирования карточек
  /api/tips/v1/cms/payeeUsers:
    put:
      tags:
        - CmsPayeeUser
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullPayeeUserEditData'
          text/json:
            schema:
              $ref: '#/components/schemas/FullPayeeUserEditData'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FullPayeeUserEditData'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ShortPayeeUserProfile'
            application/json:
              schema:
                $ref: '#/components/schemas/ShortPayeeUserProfile'
            text/json:
              schema:
                $ref: '#/components/schemas/ShortPayeeUserProfile'
    get:
      tags:
        - CmsPayeeUser
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: orgId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
        - name: 'orgId[]'
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
        - name: Organizations
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
            nullable: true
        - name: query
          in: query
          schema:
            type: string
            nullable: true
        - name: from
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ManagementPayeeUserProfileArrayAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPayeeUserProfileArrayAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/ManagementPayeeUserProfileArrayAnswer'
  '/api/tips/v1/cms/payeeUsers/{id}/disable':
    post:
      tags:
        - CmsPayeeUser
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  '/api/tips/v1/cms/payeeUsers/{id}/enable':
    post:
      tags:
        - CmsPayeeUser
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  '/api/tips/v1/cms/payeeUsers/{id}':
    get:
      tags:
        - CmsPayeeUser
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ManagementPayeeUserProfile'
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPayeeUserProfile'
            text/json:
              schema:
                $ref: '#/components/schemas/ManagementPayeeUserProfile'
    post:
      tags:
        - CmsPayeeUser
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullPayeeUserEditData'
          text/json:
            schema:
              $ref: '#/components/schemas/FullPayeeUserEditData'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FullPayeeUserEditData'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ManagementPayeeUserProfile'
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPayeeUserProfile'
            text/json:
              schema:
                $ref: '#/components/schemas/ManagementPayeeUserProfile'
  /api/tips/v1/cms/payeeUsers/search:
    get:
      tags:
        - CmsPayeeUser
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: query
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PayeeUserProfileArrayAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/PayeeUserProfileArrayAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/PayeeUserProfileArrayAnswer'
  '/api/tips/v1/cms/payeeUsers/{id}/pdf':
    get:
      tags:
        - CmsPayeeUser
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: orgId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
  /api/tips/v1/cms/payeeUsers/xlsx:
    get:
      tags:
        - CmsPayeeUser
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: orgId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
  '/api/tips/v1/cms/organizations/{orgId}/tokens':
    put:
      tags:
        - CmsQrTokens
      summary: Создаёт для организации новые QR-токены
      parameters:
        - name: token
          in: header
          description: Токен доступа
          schema:
            type: string
            description: Токен доступа
            nullable: true
        - name: orgId
          in: path
          description: Id организации
          required: true
          schema:
            type: integer
            description: Id организации
            format: int64
      responses:
        '200':
          description: Токены успешно созданы
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StatusCodeResult'
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCodeResult'
            text/json:
              schema:
                $ref: '#/components/schemas/StatusCodeResult'
        '500':
          description: Ошибка создания токенов
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - CmsQrTokens
      summary: Возвращает привязки QR-токенов для организации
      parameters:
        - name: orgId
          in: path
          description: Id организации
          required: true
          schema:
            type: integer
            description: Id организации
            format: int64
        - name: token
          in: header
          description: Токен доступа
          schema:
            type: string
            description: Токен доступа
            nullable: true
      responses:
        '200':
          description: Список привязок
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/QrTokenRequest'
            application/json:
              schema:
                $ref: '#/components/schemas/QrTokenRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/QrTokenRequest'
        '500':
          description: Ошибка формирования списка привязок
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - CmsQrTokens
      summary: Обновляет привязки QR-токенов для организации
      parameters:
        - name: orgId
          in: path
          description: Id организации
          required: true
          schema:
            type: integer
            description: Id организации
            format: int64
        - name: token
          in: header
          description: Токен доступа
          schema:
            type: string
            description: Токен доступа
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QrTokenRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/QrTokenRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QrTokenRequest'
      responses:
        '200':
          description: Список привязок успешно обновлён
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
        '500':
          description: Ошибка сохранения привязок
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/api/tips/v1/cms/salesManagers/{mid}':
    get:
      tags:
        - CmsSalesManager
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: mid
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SalesManager'
            application/json:
              schema:
                $ref: '#/components/schemas/SalesManager'
            text/json:
              schema:
                $ref: '#/components/schemas/SalesManager'
  /api/tips/v1/cms/salesManagers:
    get:
      tags:
        - CmsSalesManager
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SalesManager'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SalesManager'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SalesManager'
  /api/tips/v1/dctips/pay:
    post:
      tags:
        - DcPay
      summary: Быстрая оплата для DC без получения профиля официанта
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayDcTipsRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PayDcTipsRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PayDcTipsRequestModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TipsPayResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TipsPayResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TipsPayResponse'
  '/api/tips/v1/iiko/profile/{code}':
    get:
      tags:
        - DeprecatedIiko
      summary: Получения профиля на оплату по коду с QR на пречеке iiko
      parameters:
        - name: code
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
        - name: ClientId
          in: header
          description: ''
          schema:
            type: string
            description: ''
            format: uuid
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PayStartData'
            application/json:
              schema:
                $ref: '#/components/schemas/PayStartData'
            text/json:
              schema:
                $ref: '#/components/schemas/PayStartData'
  '/api/tips/image/{id}':
    get:
      tags:
        - ImagesControllerForWeb
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  '/api/internal/v1/tokens/organization/{orgId}':
    get:
      tags:
        - InternalQrToken
      summary: Выгружает все карточки с QR-токенами
      parameters:
        - name: orgId
          in: path
          description: Id организации
          required: true
          schema:
            type: integer
            description: Id организации
            format: int64
      responses:
        '200':
          description: ZIP-архив с карточками в формате PDF
          content:
            text/plain:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: string
                format: binary
            text/json:
              schema:
                type: string
                format: binary
        '500':
          description: Ошибка формирования карточек
  /api/tips/landing/request:
    post:
      tags:
        - Landing
      summary: Заявка на подключение
      requestBody:
        description: запрос
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerRegistrationRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PartnerRegistrationRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PartnerRegistrationRequestModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/internal/v1/organizations:
    put:
      tags:
        - Organization
      summary: Добавление организации через SalesForce
      requestBody:
        description: Анкета организации
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationWithManagementUserRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationWithManagementUserRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationWithManagementUserRequest'
      responses:
        '200':
          description: Организация и пользователь добавлены или обновлены
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganizationCreationResult'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCreationResult'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganizationCreationResult'
        '500':
          description: Не удалось добавить организацию
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/tips/v1/pay/start:
    post:
      tags:
        - Pay
      parameters:
        - name: ClientId
          in: header
          schema:
            type: string
            format: uuid
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTipRequestByCodeModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PayTipRequestByCodeModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PayTipRequestByCodeModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TipsPayResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TipsPayResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TipsPayResponse'
  /api/tips/v1/pay/info:
    get:
      tags:
        - Pay
      parameters:
        - name: paymentObjectId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WaiterPaymentOperationInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/WaiterPaymentOperationInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/WaiterPaymentOperationInfo'
  /api/tips/v1/pay/complete:
    get:
      tags:
        - Pay
      parameters:
        - name: paymentObjectId
          in: query
          schema:
            type: string
            format: uuid
        - name: code
          in: query
          schema:
            type: string
            nullable: true
        - name: success
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
  /api/tips/v1/pay/completeSber:
    get:
      tags:
        - Pay
      parameters:
        - name: paymentObjectId
          in: query
          schema:
            type: string
            format: uuid
        - name: code
          in: query
          schema:
            type: string
            nullable: true
        - name: success
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
  /api/tips/v1/pay/completeMmr:
    get:
      tags:
        - Pay
      parameters:
        - name: status
          in: query
          schema:
            type: string
            nullable: true
        - name: issuer_id
          in: query
          schema:
            type: string
            format: uuid
        - name: payment_info
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  /api/tips/v1/pay/failedMmr:
    get:
      tags:
        - Pay
      parameters:
        - name: status
          in: query
          schema:
            type: string
            nullable: true
        - name: issuer_id
          in: query
          schema:
            type: string
            format: uuid
        - name: payment_info
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  /api/tips/v1/pay/startApplePaySession:
    post:
      tags:
        - Pay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartApplePaySessionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/StartApplePaySessionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StartApplePaySessionRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/tips/v1/pay/sendReview:
    post:
      tags:
        - Pay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendReviewRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SendReviewRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendReviewRequest'
      responses:
        '200':
          description: Success
  /api/tips/v1/payByCode:
    get:
      tags:
        - PayByCode
      parameters:
        - name: code
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  /api/tips/v1/pay/profile:
    post:
      tags:
        - PayProfile
      summary: Получение профиля на оплату
      parameters:
        - name: id
          in: query
          description: Id пользователя
          schema:
            type: integer
            description: Id пользователя
            format: int64
        - name: orgId
          in: query
          description: Id организации если есть
          schema:
            type: integer
            description: Id организации если есть
            format: int64
            nullable: true
        - name: orderId
          in: query
          schema:
            type: string
            nullable: true
        - name: checkinType
          in: query
          schema:
            $ref: '#/components/schemas/CheckinType'
        - name: orderSum
          in: query
          schema:
            type: number
            format: double
            nullable: true
        - name: ClientId
          in: header
          description: Генерируется на клиенте (вебке) и прихраниваниется
          schema:
            type: string
            description: Генерируется на клиенте (вебке) и прихраниваниется
            format: uuid
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PayStartData'
            application/json:
              schema:
                $ref: '#/components/schemas/PayStartData'
            text/json:
              schema:
                $ref: '#/components/schemas/PayStartData'
    get:
      tags:
        - PayProfile
      summary: Получение профиля на оплату
      parameters:
        - name: id
          in: query
          description: Id пользователя
          schema:
            type: integer
            description: Id пользователя
            format: int64
        - name: orgId
          in: query
          description: Id организации если есть
          schema:
            type: integer
            description: Id организации если есть
            format: int64
            nullable: true
        - name: orderId
          in: query
          schema:
            type: string
            nullable: true
        - name: checkinType
          in: query
          schema:
            $ref: '#/components/schemas/CheckinType'
        - name: orderSum
          in: query
          schema:
            type: number
            format: double
            nullable: true
        - name: tokenId
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
        - name: ClientId
          in: header
          description: Генерируется на клиенте (вебке) и прихраниваниется
          schema:
            type: string
            description: Генерируется на клиенте (вебке) и прихраниваниется
            format: uuid
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PayStartData'
            application/json:
              schema:
                $ref: '#/components/schemas/PayStartData'
            text/json:
              schema:
                $ref: '#/components/schemas/PayStartData'
  '/api/tips/v1/pay/profile/token/{tokenId}':
    get:
      tags:
        - PayProfile
      summary: Получения профиля на оплату по коду переназначаемому QR
      parameters:
        - name: tokenId
          in: path
          description: Id токена
          required: true
          schema:
            type: integer
            description: Id токена
            format: int64
        - name: ClientId
          in: header
          description: Генерируется на клиенте
          schema:
            type: string
            description: Генерируется на клиенте
            format: uuid
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PayStartData'
            application/json:
              schema:
                $ref: '#/components/schemas/PayStartData'
            text/json:
              schema:
                $ref: '#/components/schemas/PayStartData'
  '/api/tips/v1/pay/profile/iiko/{code}':
    get:
      tags:
        - PayProfile
      summary: Получения профиля на оплату по коду с QR на пречеке iiko
      parameters:
        - name: code
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
        - name: ClientId
          in: header
          description: ''
          schema:
            type: string
            description: ''
            format: uuid
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PayStartData'
            application/json:
              schema:
                $ref: '#/components/schemas/PayStartData'
            text/json:
              schema:
                $ref: '#/components/schemas/PayStartData'
  /api/tips/v1/pay/profile/dcintegration:
    post:
      tags:
        - PayProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayDcTipsProfileRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PayDcTipsProfileRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PayDcTipsProfileRequestModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PayStartData'
            application/json:
              schema:
                $ref: '#/components/schemas/PayStartData'
            text/json:
              schema:
                $ref: '#/components/schemas/PayStartData'
  '/api/tips/pdf/{id}':
    get:
      tags:
        - Pdf
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: app
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  /api/tips/v1/profile/activityTypes:
    get:
      tags:
        - ProfileControllerForWeb
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TreeDictionaryItem'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TreeDictionaryItem'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TreeDictionaryItem'
  /api/tips/v1/profile:
    get:
      tags:
        - ProfileControllerForWeb
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FullUserProfile'
            application/json:
              schema:
                $ref: '#/components/schemas/FullUserProfile'
            text/json:
              schema:
                $ref: '#/components/schemas/FullUserProfile'
    post:
      tags:
        - ProfileControllerForWeb
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayeeUserProfile'
          text/json:
            schema:
              $ref: '#/components/schemas/PayeeUserProfile'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PayeeUserProfile'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PayeeUserProfile'
            application/json:
              schema:
                $ref: '#/components/schemas/PayeeUserProfile'
            text/json:
              schema:
                $ref: '#/components/schemas/PayeeUserProfile'
  /api/tips/v1/profile/wallets:
    get:
      tags:
        - ProfileControllerForWeb
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayeeUserWallet'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayeeUserWallet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayeeUserWallet'
    put:
      tags:
        - ProfileControllerForWeb
      summary: Добавляет кошелек для пользователя
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletAddRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WalletAddRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WalletAddRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
    delete:
      tags:
        - ProfileControllerForWeb
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: walletId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  /api/tips/v1/profile/wallets/makeDefault:
    post:
      tags:
        - ProfileControllerForWeb
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: walletId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  /api/tips/v1/profile/uploadPhoto:
    post:
      tags:
        - ProfileControllerForWeb
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/GenericAnswer'
  /api/tips/v1/profile/qr:
    get:
      tags:
        - ProfileControllerForWeb
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  /api/tips/v1/profile/recentTips:
    get:
      tags:
        - ProfileControllerForWeb
      parameters:
        - name: token
          in: header
          schema:
            type: string
            nullable: true
        - name: from
          in: query
          schema:
            type: integer
            format: int64
        - name: to
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RecentTipsAnswer'
            application/json:
              schema:
                $ref: '#/components/schemas/RecentTipsAnswer'
            text/json:
              schema:
                $ref: '#/components/schemas/RecentTipsAnswer'
  '/api/tips/qr/{id}':
    get:
      tags:
        - Qr
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: app
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
  /api/tips/v1/setup/language:
    post:
      tags:
        - Setup
      summary: Установить cookie для языка
      parameters:
        - name: culture
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
  /api/tips/v1/setup/languageTest:
    get:
      tags:
        - Setup
      summary: Установка cookie через GET запрос для тестов
      parameters:
        - name: culture
          in: query
          description: ''
          schema:
            type: string
            description: ''
            nullable: true
      responses:
        '200':
          description: Success
  /api/tips/v1/setup/test:
    get:
      tags:
        - Setup
      summary: Проверка языка
      responses:
        '200':
          description: Success
  /internal/waiterinfo:
    get:
      tags:
        - WaiterInformation
      parameters:
        - name: organizationId
          in: query
          schema:
            type: string
            format: uuid
        - name: waiterId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WaiterInfoResult'
            application/json:
              schema:
                $ref: '#/components/schemas/WaiterInfoResult'
            text/json:
              schema:
                $ref: '#/components/schemas/WaiterInfoResult'
  '/api/tips/waiter/links/qr/{id}':
    get:
      tags:
        - WaiterLinks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
components:
  schemas:
    TreeDictionaryItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/TreeDictionaryItem'
          nullable: true
      additionalProperties: false
    TreeDictionaryItemArrayAnswer:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/TreeDictionaryItem'
          nullable: true
      additionalProperties: false
    AuditEventData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        time:
          type: string
          format: date-time
        userId:
          type: integer
          format: int64
        entityName:
          type: string
          nullable: true
        entityId:
          nullable: true
        fieldNames:
          type: array
          items:
            type: string
          nullable: true
        oldState:
          type: array
          items: {}
          nullable: true
        newState:
          type: array
          items: {}
          nullable: true
      additionalProperties: false
    AuditEventDataArrayAnswer:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AuditEventData'
          nullable: true
      additionalProperties: false
    Phone:
      type: object
      additionalProperties: false
    SendSmsRequest:
      type: object
      properties:
        responseCode:
          type: string
          nullable: true
        phone:
          $ref: '#/components/schemas/Phone'
      additionalProperties: false
    SendSmsResponse:
      type: object
      properties:
        session:
          type: string
          nullable: true
      additionalProperties: false
    ValidateSmsCodeRequest:
      type: object
      properties:
        session:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    ManagementLoginRequest:
      type: object
      properties:
        phone:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        inviteToken:
          type: string
          nullable: true
        responseCode:
          type: string
          nullable: true
      additionalProperties: false
    ManagementUserInfo:
      type: object
      properties:
        registered:
          type: boolean
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
      additionalProperties: false
    ManagementLoginResponse:
      type: object
      properties:
        token:
          type: string
          nullable: true
        userInfo:
          $ref: '#/components/schemas/ManagementUserInfo'
      additionalProperties: false
    GenericAnswer:
      type: object
      properties:
        success:
          type: boolean
      additionalProperties: false
    CompletePasswordRecoveryRequest:
      type: object
      properties:
        session:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    ChangePasswordRequest:
      type: object
      properties:
        newPassword:
          type: string
          nullable: true
      additionalProperties: false
    UserStatus:
      type: object
      properties:
        registered:
          type: boolean
      additionalProperties: false
    CreateManagementUserRequestModel:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        phone:
          $ref: '#/components/schemas/Phone'
        email:
          type: string
          nullable: true
        orgIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        role:
          type: string
          nullable: true
      additionalProperties: false
    ManagementUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        phone:
          $ref: '#/components/schemas/Phone'
        email:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        hasPassword:
          type: boolean
        disabled:
          type: boolean
        orgIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      additionalProperties: false
    ManagementUserArrayAnswer:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ManagementUser'
          nullable: true
      additionalProperties: false
    EditManagementUserRequestModel:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        phone:
          $ref: '#/components/schemas/Phone'
        email:
          type: string
          nullable: true
        orgIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      additionalProperties: false
    WalletType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    ManagementPaymentOperationInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        time:
          type: string
          format: date-time
        payeeId:
          type: integer
          format: int64
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        sum:
          type: number
          format: double
        paymentType:
          type: integer
          format: int32
        state:
          type: integer
          format: int32
          nullable: true
        paymentObjectId:
          type: string
          format: uuid
          nullable: true
        rating:
          type: integer
          format: int32
        comment:
          type: string
          nullable: true
        orgId:
          type: integer
          format: int64
          nullable: true
        walletType:
          $ref: '#/components/schemas/WalletType'
      additionalProperties: false
    ManagementPaymentOperationInfoArrayAnswer:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ManagementPaymentOperationInfo'
          nullable: true
      additionalProperties: false
    OrganizationOperationsReportRecord:
      type: object
      properties:
        payeeId:
          type: integer
          format: int64
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        photoUrl:
          type: string
          nullable: true
        sum:
          type: number
          format: double
        transactionCount:
          type: integer
          format: int32
        averageRating:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    OrganizationOperationsReportTotal:
      type: object
      properties:
        sum:
          type: number
          format: double
        transactionCount:
          type: integer
          format: int32
        averageRating:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    OrganizationOperationsReport:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationOperationsReportRecord'
          nullable: true
        total:
          $ref: '#/components/schemas/OrganizationOperationsReportTotal'
      additionalProperties: false
    ExtendedOperationInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        uid:
          type: string
          format: uuid
        walletCode:
          type: string
          nullable: true
        paymentOperationId:
          type: string
          format: uuid
        localizedErrorMessage:
          type: string
          nullable: true
      additionalProperties: false
    ManagerInfo:
      type: object
      properties:
        name:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    OrganizationOperationRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        inn:
          type: string
          nullable: true
        kpp:
          type: string
          nullable: true
        SalesforceId:
          type: integer
          format: int32
          nullable: true
        type:
          type: integer
          format: int32
        manager:
          $ref: '#/components/schemas/ManagerInfo'
        logoData:
          type: string
          nullable: true
        plaziusId:
          type: string
          format: uuid
          nullable: true
        cashSystemType:
          type: integer
          format: int32
        salesManagerId:
          type: integer
          format: int64
          nullable: true
        isFromLanding:
          type: boolean
      additionalProperties: false
    ShortOrganizationInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        type:
          type: integer
          format: int32
        address:
          type: string
          nullable: true
        logoUrl:
          type: string
          nullable: true
        disabled:
          type: boolean
      additionalProperties: false
    ShortOrganizationInfoForList:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        logoUrl:
          type: string
          nullable: true
        employesCount:
          type: integer
          format: int32
        disabled:
          type: boolean
      additionalProperties: false
    ShortOrganizationInfoForListArrayAnswer:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ShortOrganizationInfoForList'
          nullable: true
      additionalProperties: false
    FullOrganizationInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        type:
          type: integer
          format: int32
        address:
          type: string
          nullable: true
        logoUrl:
          type: string
          nullable: true
        disabled:
          type: boolean
        manager:
          $ref: '#/components/schemas/ManagerInfo'
        cashSystemType:
          type: integer
          format: int32
        inn:
          type: string
          nullable: true
        kpp:
          type: string
          nullable: true
        plaziusId:
          type: string
          format: uuid
          nullable: true
        salesManagerId:
          type: integer
          format: int64
          nullable: true
        salesforce_id:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    PayeeLinkRequest:
      type: object
      properties:
        payeeUserId:
          type: integer
          format: int64
        positionId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    UpdatePhotoResult:
      type: object
      properties:
        success:
          type: boolean
        photoUrl:
          type: string
          nullable: true
      additionalProperties: false
    QrPrechequeIntegrationRequest:
      type: object
      properties:
        systemType:
          type: integer
          format: int32
        contact:
          type: string
          nullable: true
        phone:
          $ref: '#/components/schemas/Phone'
        email:
          type: string
          nullable: true
      additionalProperties: false
    CardsOrderRequest:
      type: object
      properties:
        payeeId:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      additionalProperties: false
    SbertipsErrorCode:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - -1
      type: integer
      format: int32
    ErrorResponse:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/SbertipsErrorCode'
        message:
          type: string
          nullable: true
        error:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    DownloadCardsRequest:
      type: object
      properties:
        tokenIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      additionalProperties: false
    PayeeUserWallet:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/WalletType'
        data:
          type: string
          nullable: true
        cardType:
          type: string
          nullable: true
      additionalProperties: false
    PayeeUserPosition:
      type: object
      properties:
        orgId:
          type: integer
          format: int64
        positionId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    FullPayeeUserEditData:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        phone:
          $ref: '#/components/schemas/Phone'
        email:
          type: string
          nullable: true
        photoData:
          type: string
          nullable: true
        activityTypeId:
          type: integer
          format: int64
          nullable: true
        positionId:
          type: integer
          format: int64
          nullable: true
        status:
          type: string
          nullable: true
        defaultWalletId:
          type: integer
          format: int64
          nullable: true
        wallets:
          type: array
          items:
            $ref: '#/components/schemas/PayeeUserWallet'
          nullable: true
        positions:
          type: array
          items:
            $ref: '#/components/schemas/PayeeUserPosition'
          nullable: true
      additionalProperties: false
    ShortPayeeUserProfile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        uid:
          type: string
          format: uuid
        firstName:
          type: string
          nullable: true
        photoUrl:
          type: string
          nullable: true
        phone:
          $ref: '#/components/schemas/Phone'
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    ManagementPayeeUserProfile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        uid:
          type: string
          format: uuid
        firstName:
          type: string
          nullable: true
        photoUrl:
          type: string
          nullable: true
        phone:
          $ref: '#/components/schemas/Phone'
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        defaultWalletId:
          type: integer
          format: int64
          nullable: true
        activityTypeId:
          type: integer
          format: int64
          nullable: true
        positionId:
          type: integer
          format: int64
          nullable: true
        status:
          type: string
          nullable: true
        registrationTime:
          type: string
          format: date-time
        lastTransactionTime:
          type: string
          format: date-time
          nullable: true
        rating:
          type: number
          format: double
        positions:
          type: array
          items:
            $ref: '#/components/schemas/PayeeUserPosition'
          nullable: true
        wallets:
          type: array
          items:
            $ref: '#/components/schemas/PayeeUserWallet'
          nullable: true
      additionalProperties: false
    ManagementPayeeUserProfileArrayAnswer:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ManagementPayeeUserProfile'
          nullable: true
      additionalProperties: false
    PayeeUserProfile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        uid:
          type: string
          format: uuid
        firstName:
          type: string
          nullable: true
        photoUrl:
          type: string
          nullable: true
        phone:
          $ref: '#/components/schemas/Phone'
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        defaultWalletId:
          type: integer
          format: int64
          nullable: true
        activityTypeId:
          type: integer
          format: int64
          nullable: true
        positionId:
          type: integer
          format: int64
          nullable: true
        status:
          type: string
          nullable: true
      additionalProperties: false
    PayeeUserProfileArrayAnswer:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PayeeUserProfile'
          nullable: true
      additionalProperties: false
    StatusCodeResult:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    QrTokenModel:
      type: object
      properties:
        number:
          type: integer
          format: int32
        userId:
          type: integer
          format: int64
          nullable: true
        url:
          type: string
          nullable: true
      additionalProperties: false
    QrTokenRequest:
      type: object
      properties:
        tokens:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/QrTokenModel'
          nullable: true
      additionalProperties: false
    SalesManager:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
      additionalProperties: false
    PaymentType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    PayDcTipsRequestModel:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        organizationId:
          type: string
          format: uuid
        orderId:
          type: string
          format: uuid
        code:
          $ref: '#/components/schemas/PaymentType'
        sum:
          type: integer
          format: int64
        encryptedData:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
      additionalProperties: false
    ExecutionState:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    TipsPayResponse:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/ExecutionState'
        localizedErrorMessage:
          type: string
          nullable: true
        authUrl:
          type: string
          nullable: true
        paymentObjectUid:
          type: string
          format: uuid
      additionalProperties: false
    FeeModel:
      type: object
      properties:
        min:
          type: number
          format: float
        percent:
          type: integer
          format: int32
        currency:
          type: string
          nullable: true
      additionalProperties: false
    PayStartData:
      type: object
      properties:
        objectCode:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        photoUrl:
          type: string
          nullable: true
        paymentSystem:
          type: string
          nullable: true
        cardType:
          type: string
          nullable: true
        sumVariants:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        min:
          type: integer
          format: int32
        max:
          type: integer
          format: int32
        fee:
          $ref: '#/components/schemas/FeeModel'
      additionalProperties: false
    PartnerRegistrationRequestModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        orgName:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        responseCode:
          type: string
          nullable: true
      additionalProperties: false
    CreateManagementUserRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    OrganizationType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      format: int32
    CashSystemType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      format: int32
    CreateOrganizationWithManagementUserRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        inn:
          type: string
          nullable: true
        kpp:
          type: string
          nullable: true
        SalesforceId:
          type: integer
          format: int32
          nullable: true
        manager:
          $ref: '#/components/schemas/CreateManagementUserRequest'
        type:
          $ref: '#/components/schemas/OrganizationType'
        cashSystemType:
          $ref: '#/components/schemas/CashSystemType'
      additionalProperties: false
    OrganizationCreationResult:
      type: object
      properties:
        id:
          type: integer
          format: int64
        newOrganizationCreated:
          type: boolean
        newManagementUserCreated:
          type: boolean
      additionalProperties: false
    PayTipRequestByCodeModel:
      type: object
      properties:
        objectCode:
          type: string
          nullable: true
        sum:
          type: integer
          format: int64
        code:
          $ref: '#/components/schemas/PaymentType'
        comment:
          type: string
          nullable: true
        rating:
          type: integer
          format: int32
          nullable: true
        encryptedData:
          type: string
          nullable: true
      additionalProperties: false
    WaiterPaymentOperationInfo:
      type: object
      properties:
        waiterId:
          type: integer
          format: int64
        sum:
          type: number
          format: double
        commission:
          type: number
          format: double
        comment:
          type: string
          nullable: true
        rating:
          type: integer
          format: int32
          nullable: true
        success:
          type: boolean
          readOnly: true
        name:
          type: string
          nullable: true
        photo:
          type: string
          nullable: true
        orgId:
          type: integer
          format: int64
          nullable: true
        paymentType:
          $ref: '#/components/schemas/PaymentType'
      additionalProperties: false
    StartApplePaySessionRequest:
      type: object
      properties:
        uri:
          type: string
          nullable: true
        objectCode:
          type: string
          nullable: true
      additionalProperties: false
    SendReviewRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        comment:
          type: string
          nullable: true
        rating:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    CheckinType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      format: int32
    PayDcTipsProfileRequestModel:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        organizationId:
          type: string
          format: uuid
        orderId:
          type: string
          format: uuid
      additionalProperties: false
    UserCard:
      type: object
      properties:
        position:
          type: string
          nullable: true
        orgName:
          type: string
          nullable: true
        orgId:
          type: integer
          format: int64
          nullable: true
        qrUrl:
          type: string
          nullable: true
        pdfUrl:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    FullUserProfile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        uid:
          type: string
          format: uuid
        firstName:
          type: string
          nullable: true
        photoUrl:
          type: string
          nullable: true
        phone:
          $ref: '#/components/schemas/Phone'
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        defaultWalletId:
          type: integer
          format: int64
          nullable: true
        activityTypeId:
          type: integer
          format: int64
          nullable: true
        positionId:
          type: integer
          format: int64
          nullable: true
        status:
          type: string
          nullable: true
        cards:
          type: array
          items:
            $ref: '#/components/schemas/UserCard'
          nullable: true
        qrUrl:
          type: string
          nullable: true
        pdfUrl:
          type: string
          nullable: true
      additionalProperties: false
    WalletAddRequest:
      type: object
      properties:
        walletType:
          type: integer
          format: int32
        walletData:
          type: string
          nullable: true
        cardType:
          type: string
          nullable: true
      additionalProperties: false
    WaiterTipsHistoryItem:
      type: object
      properties:
        datetime:
          type: string
          format: date-time
        sum:
          type: number
          format: double
        comment:
          type: string
          nullable: true
        rating:
          type: number
          format: double
      additionalProperties: false
    RecentTipsAnswer:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/WaiterTipsHistoryItem'
          nullable: true
        sum:
          type: number
          format: double
        count:
          type: number
          format: double
        rating:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    WaiterInfo:
      type: object
      properties:
        waiterId:
          type: integer
          format: int64
        cardType:
          type: string
          nullable: true
      additionalProperties: false
    WaiterInfoResult:
      type: object
      properties:
        ok:
          type: boolean
        hasDuplicate:
          type: boolean
        waiterInfo:
          $ref: '#/components/schemas/WaiterInfo'
        secondWaiterInfo:
          $ref: '#/components/schemas/WaiterInfo'
      additionalProperties: false
